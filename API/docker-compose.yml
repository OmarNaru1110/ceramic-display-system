version: '3.9'

services:
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: ceramic-display-sqlserver
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong@Password123
      - MSSQL_PID=Developer
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P YourStrong@Password123 -C -Q 'SELECT 1' || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 10
      start_period: 30s
    networks:
      - ceramic-network

  sqlserver-configurator:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: ceramic-db-configurator
    depends_on:
      sqlserver:
        condition: service_healthy
    environment:
      - SA_PASSWORD=YourStrong@Password123
    command: >
      /bin/bash -c "
      echo 'Waiting for SQL Server to be fully ready...';
      sleep 10;
      echo 'Creating database ceramic-display-db...';
      /opt/mssql-tools18/bin/sqlcmd -S sqlserver -U sa -P YourStrong@Password123 -C -Q \"
      IF NOT EXISTS (SELECT name FROM sys.databases WHERE name = 'ceramic-display-db')
      BEGIN
          CREATE DATABASE [ceramic-display-db];
          PRINT 'Database ceramic-display-db created successfully';
      END
      ELSE
      BEGIN
          PRINT 'Database ceramic-display-db already exists';
      END
      \";
      if [ \$$? -eq 0 ]; then
        echo 'Database ceramic-display-db created successfully!';
      else
        echo 'Failed to create database';
        exit 1;
      fi
      "
    networks:
      - ceramic-network
    restart: "no"

  webapi:
    build:
      context: .
      dockerfile: API/dockerfile
    container_name: ceramic-display-webapi
    depends_on:
      sqlserver:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=ceramic-display-db;User Id=sa;Password=YourStrong@Password123;TrustServerCertificate=True;Encrypt=True;
    ports:
      - "5000:80"
    networks:
      - ceramic-network
    restart: unless-stopped

volumes:
  sqlserver_data:

networks:
  ceramic-network:
    driver: bridge